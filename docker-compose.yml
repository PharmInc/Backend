services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: service-container
    environment:
      DATABASE_URL: ${DATABASE_URL:?}
      JWT_SECRET: ${JWT_SECRET:?}
    depends_on:
      - database
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`api.pharminc.in`)

  database:
    container_name: service-database
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:?}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
      POSTGRES_DB: ${POSTGRES_DB:?}
    volumes:
      - ${DATABASE_VOLUME:?}:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
